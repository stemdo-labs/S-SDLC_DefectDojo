name: 'Upload Security Report to DefectDojo'
description: 'Sube reporte de seguridad a DefectDojo y lo asocia a un engagement.'
inputs:
  defectdojo_user:
    description: 'Usuario de DefectDojo'
    required: true
  defectdojo_password:
    description: 'Contraseña de DefectDojo'
    required: true
  product_id:
    description: 'ID del producto en DefectDojo'
    required: true
  release_name:
    description: 'Nombre del engagement'
    required: true
  scan_type:
    description: 'Tipo de escaneo'
    required: true
  enviroment:
    description: 'Entorno'
    required: true
  report:
    description: 'Reporte a escanear'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Extraer URL de DefectDojo desde Route.yaml
      shell: bash
      run: |
        DEFECTDOJO_URL=$(grep '^\s*host:' "${GITHUB_WORKSPACE}/charts/dojo/route.yml" | sed 's/.*host: //g' | tr -d '[:space:]')
        echo "DEFECTDOJO_URL=${DEFECTDOJO_URL}"  >> $GITHUB_ENV
    

    - name: Obtener Token de DefectDojo
      shell: bash
      run: |
        echo " Obteniendo token de DefectDojo..."
        TOKEN_RESPONSE=$(curl -s -X POST "https://${DEFECTDOJO_URL}/api/v2/api-token-auth/" \
          -H "accept: application/json" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "username=${{ inputs.defectdojo_user }}" \
          --data-urlencode "password=${{ inputs.defectdojo_password }}")

        # Extraer el token de la respuesta JSON
        TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.token')
        
        # Validar si el token se obtuvo correctamente
        if [ -z "$TOKEN" ] || [ "$TOKEN" == "null" ]; then
          echo "Error: No se pudo obtener el token de DefectDojo."
          exit 1
        fi
        
        echo "DEFECTDOJO_TOKEN=${TOKEN}" >> $GITHUB_ENV
        
    - name: Dar permisos de ejecución a entrypoint.sh
      shell: bash
      run: chmod +x ${{ github.action_path }}/entrypoint.sh
      
    - name: Ejecutar script de subida a DefectDojo
      shell: bash
      run: ${{ github.action_path }}/entrypoint.sh
      env:
        DEFECTDOJO_URL: ${{ env.DEFECTDOJO_URL }}
        DEFECTDOJO_TOKEN: ${{ env.DEFECTDOJO_TOKEN }}
        PRODUCT_ID: ${{ inputs.product_id }}
        ENGAGEMENT_NAME: ${{ inputs.release_name }}
        SCAN_TYPE: ${{ inputs.scan_type }}
        REPORT: ${{ inputs.report }}
